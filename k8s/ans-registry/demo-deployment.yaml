apiVersion: apps/v1
kind: Deployment
metadata:
  name: ans-registry-demo
  namespace: ans-system
  labels:
    app.kubernetes.io/name: ans-registry-demo
    app.kubernetes.io/component: registry
    app.kubernetes.io/part-of: ans
    app.kubernetes.io/version: 1.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ans-registry-demo
      app.kubernetes.io/component: registry
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ans-registry-demo
        app.kubernetes.io/component: registry
        app.kubernetes.io/part-of: ans
        app.kubernetes.io/version: 1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ans-registry
      containers:
      - name: ans-registry-demo
        image: nginx:alpine
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: metrics
          containerPort: 8080
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: ANS_DEMO_MODE
          value: "true"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: ans-registry-config
          optional: true
